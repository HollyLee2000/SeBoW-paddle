import paddle

reverse_index = [5, 3, 7, 0, 4, 1, 8, 9, 2, 6]

"""
代替receiver的one-hot向量
"""
# level1 = torch.FloatTensor([[1.],
#                              [1.]])
#
# level2=torch.FloatTensor([[1., 0.],
#                           [1., 0.],
#                           [0., 1.],
#                           [0., 1.]])
level1 = paddle.to_tensor([[1.]])
level2 = paddle.to_tensor([[1.]])
level3 = paddle.ones([4, 1])
level4 = paddle.to_tensor(([[0., 0., 1., 0.],
                            [0., 1., 0., 0.],
                            [0., 0., 0., 1.],
                            [1., 0., 0., 0.],
                            [0., 1., 0., 0.],
                            [1., 0., 0., 0.],
                            [0., 0., 0., 1.],
                            [0., 0., 0., 1.],
                            [1., 0., 0., 0.],
                            [0., 0., 1., 0.]]))

# reverse_index = [4, 5, 2, 0, 1, 3, 8, 6, 7, 9]
# reverse_index = [8, 0, 5, 2, 6, 3, 9, 4, 7, 1]
# reverse_index = [11, 12, 21, 22, 56, 0, 43, 1, 57, 35, 23, 2, 36, 24, 44, 58, 86, 75, 59, 13, 37, 25, 60, 3, 76, 87, 4, 61, 5, 38,
#                  62, 63, 26, 14, 64, 77, 27, 65, 6, 88, 89, 39, 66, 40, 41, 45, 7, 46, 78, 90, 28, 67, 68, 79, 47, 91, 92, 93, 48,
#                  15, 94, 80, 49, 50, 51, 16, 69, 29, 42, 70, 17, 95, 30, 8, 31, 71, 81, 18, 72, 82, 73, 52, 19, 83, 84, 74, 96, 32,
#                  33, 53, 85, 20, 97, 54, 9, 98, 55, 34, 99, 10]


# 5layer_3conv
# # level1 = torch.FloatTensor([[1.],
# #                              [1.]])
# #
# # level2=torch.FloatTensor([[1., 0.],
# #                           [1., 0.],
# #                           [0., 1.],
# #                           [1., 0.]])
#
#
# level3=torch.FloatTensor(([[0., 0., 1., 0.],
#                           [0., 0., 1., 0.],
#                           [1., 0., 0., 0.],
#                           [0., 1., 0., 0.],
#                           [1., 0., 0., 0.],
#                           [1., 0., 0., 0.],
#                           [0., 0., 1., 0.],
#                           [0., 1., 0., 0.]]))
#
#
# level4=torch.FloatTensor([[0, 0, 0, 0, 0, 0, 1, 0],
#                         [1, 0, 0, 0, 0, 0, 0, 0],
#                         [0, 0, 0, 0, 1, 0, 0, 0],
#                         [0, 0, 1, 0, 0, 0, 0, 0],
#                         [0, 0, 0, 0, 0, 1, 0, 0],
#                         [0, 0, 0, 1, 0, 0, 0, 0],
#                         [0, 0, 0, 0, 0, 0, 0, 1],
#                         [0, 0, 0, 1, 0, 0, 0, 0],
#                         [0, 0, 0, 0, 0, 1, 0, 0],
#                         [0, 1, 0, 0, 0, 0, 0, 0]])

# CIFAR100


# level1 = torch.FloatTensor([[1.],
#                              [1.]])

# level2=torch.FloatTensor([[1., 0.],
#                           [0., 1.],
#                           [0., 1.],
#                           [1., 0.]])
#
#
# level3=torch.FloatTensor(([[0., 0., 0., 1.],
#                           [0., 0., 1., 0.],
#                           [0., 1., 0., 0.],
#                           [1., 0., 0., 0.],
#                           [0., 1., 0., 0.],
#                           [0., 0., 0., 1.],
#                           [0., 1., 0., 0.],
#                           [0., 0., 1., 0.]]))


# level4 = torch.ones([10,1])

# level4=torch.FloatTensor([[0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 1., 0., 0., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 1., 0., 0., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 1., 0., 0., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 1., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 1., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 1., 0., 0., 0., 0.],
#         [0., 0., 0., 1., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 1., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 0., 0., 0., 0., 1., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 1., 0.],
#         [0., 1., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [1., 0., 0., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [0., 0., 0., 0., 1., 0., 0., 0.],
#         [0., 0., 1., 0., 0., 0., 0., 0.],
#         [0., 0., 0., 0., 0., 0., 0., 1.],
#         [1., 0., 0., 0., 0., 0., 0., 0.]])

# CIFAR10
# level2=torch.FloatTensor([[1., 0.],
#                           [0., 1.],
#                           [1., 0.],
#                           [0., 1.]])

# level2=torch.FloatTensor([[1.],
#                           [1.],
#                           [1.],
#                           [1.]])
#
# level3=torch.FloatTensor(([[0., 0., 1., 0.],
#         [1., 0., 0., 0.],
#         [0., 0., 1., 0.],
#         [0., 0., 0., 1.],
#         [1., 0., 0., 0.],
#         [0., 1., 0., 0.],
#         [0., 1., 0., 0.],
#         [0., 0., 0., 1.]]))

# level3=torch.FloatTensor(([[0., 0., 0., 1.],
#                           [0., 0., 1., 0.],
#                           [0., 0., 1., 0.],
#                           [0., 1., 0., 0.],
#                           [1., 0., 0., 0.],
#                           [1., 0., 0., 0.],
#                           [0., 0., 1., 0.],
#                           [0., 1., 0., 0.]]))

# level2=torch.FloatTensor([[1.]])
# #
# # level3=torch.FloatTensor([[1.]])
#
# level3=torch.FloatTensor([[1.],
#                         [1.],
#                         [1.],
#                         [1. ],
#                         [1. ],
#                         [1. ],
#                         [1. ],
#                         [1. ]])

# level4=torch.FloatTensor([[0, 0, 0, 1, 0, 0, 0, 0],
#                         [0, 0, 0, 0, 1, 0, 0, 0],
#                         [0, 0, 1, 0, 0, 0, 0, 0],
#                         [1, 0, 0, 0, 0, 0, 0, 0],
#                         [0, 1, 0, 0, 0, 0, 0, 0],
#                         [0, 0, 1, 0, 0, 0, 0, 0],
#                         [0, 0, 0, 0, 0, 0, 1, 0],
#                         [0, 0, 0, 0, 0, 1, 0, 0],
#                         [0, 0, 0, 0, 0, 1, 0, 0],
#                         [0, 0, 0, 0, 0, 0, 0, 1]])

# level3=torch.FloatTensor([[1.]])
#
# level4=torch.FloatTensor([[1],
#                         [1],
#                         [1],
#                         [1],
#                         [1],
#                         [1],
#                         [1],
#                         [1],
#                         [1],
#                         [1]])
